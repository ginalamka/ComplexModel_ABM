setwd("C:/Users/HP/Box/New Computer/Auburn/Data/KRats") #set working directory in the Rstudio folder on my computer and box drive
directory = getwd()
field = read.table("KRATP.csv", header=T, sep=",")
data  = read.table("krat_pedigree_plus.csv", header=T, sep=",")
setwd("C:/Users/HP/Box/New Computer/Auburn/Data/KRats") #set working directory in the Rstudio folder on my computer and box drive
getwd()
setwd("C:/Users/HP/Box/New Computer/Auburn/Data/KRats") #set working directory in the Rstudio folder on my computer and box drive
plot(y=1x+2)
setwd("C:/Users/ginab/Box/New Computer/Auburn/Data/ComplexModel_ABM/Output_local/finaldata/sept2023") #setwd("C:/Users/Gina/Desktop/2022/ComplexModel_ABM")
directory = getwd()
outdir = paste(directory, "/figs/", sep = "")
library(colorspace)
library(scales)
library(FSA)
gt.cols <- c("grey", "firebrick3", "darkorange1", "gold") #"springgreen3"
#plot specs
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
#poly specs
dens = NULL #c(100, 100, 100, 100, NULL, NA, NULL, NA)
ang = 45
bo = NA #c(NULL, NULL, NULL, NULL, NA, NA, NA, NA) #alpha(gt.cols[col], .8)
alf = c(.7, .7, .7, .7, .7, .7, .7, .7) #.7, .7, .7, .7
lty = c(3,3,3,3,1,1,1,1)
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
#legend('center', legend = c('Critically Endangered', 'Endangered','Vulnerable', 'No Population Decline'), col = gt.cols, pch = 15, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.4, horiz = FALSE, x.intersp = 0.3, y.intersp = 0.5)
legend("center", legend = c('no migrants', '1 migrant / year','burst', 'pulse'), col = "black", pch = pch, lty = lty, pt.lwd = lwd, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, xjust=0, x.intersp = 0.3, y.intersp=0.5, seg.len = .75)
p30 = read.table("end_9.18.23_LL30_all_summary.csv", header=T, sep=",") #fin_5.10.23_1LL30_all_summary
p3a = read.table("end_9.18.23_LL3a_all_summary.csv", header=T, sep=",")  #fin_5.10.23_1LL3a_all_summary
smry=c(p30,p3a)
lty = c(3,3,3,3,1,1,1,1)
{
var = 5
varname = "Heterozygosity"
title = "Fig 3B"
range(smry[,var])
ymin <- .05 #round(min(smry[,var]), digits = 2)#-.1
ymax <- .25 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty <- c(3,3,3,3, 1,1,1,1)
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "B", cex=text.size, family="sans")
#title("B", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
var = 5
varname = "Heterozygosity"
title = "Fig 3B"
range(smry[,var])
smry = rbind(p30.p3a)
smry = rbind(p30,p3a)
{
var = 5
varname = "Heterozygosity"
title = "Fig 3B"
range(smry[,var])
ymin <- .05 #round(min(smry[,var]), digits = 2)#-.1
ymax <- .25 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty <- c(3,3,3,3, 1,1,1,1)
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "B", cex=text.size, family="sans")
#title("B", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
lty=c(1)
{
var = 5
varname = "Heterozygosity"
title = "Fig 3B"
range(smry[,var])
ymin <- .05 #round(min(smry[,var]), digits = 2)#-.1
ymax <- .25 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty <- c(3,3,3,3, 1,1,1,1)
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "B", cex=text.size, family="sans")
#title("B", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
gt.cols=c("firebrick",grey)
gt.cols=c("firebrick","grey"")
gt.cols=c("firebrick","grey")
gt.cols=c("firebrick","grey")
{
var = 5
varname = "Heterozygosity"
title = "Fig 3B"
range(smry[,var])
ymin <- .05 #round(min(smry[,var]), digits = 2)#-.1
ymax <- .25 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty <- c(3,3,3,3, 1,1,1,1)
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "B", cex=text.size, family="sans")
#title("B", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
p30 = read.table("end_9.18.23_LL30_all_summary.csv", header=T, sep=",") #fin_5.10.23_1LL30_all_summary
p3a = read.table("end_9.18.23_LL3a_all_summary.csv", header=T, sep=",")  #fin_5.10.23_1LL3a_all_summary
p3b = read.table("end_9.18.23_LL3b_all_summary.csv", header=T, sep=",") #fin_5.10.23_1LL3b_all_summary
p3c = read.table("end_9.18.23_LL3c_all_summary.csv", header=T, sep=",") #fin_5.10.23_1LL3c_all_summary
gt.cols = c("darkorange1", "darkorange1", "darkorange1", "darkorange1")
lty = c(3, 1, 2, 4, 3, 1, 2, 4)
pch = c(18, 19, 15, 17, 18, 19, 15, 17)
smry = rbind(p30, p3a, p3b, p3c)
par(mfrow = c(2,2))
par(mfrow = c(1,1))
var = 5
varname = "Heterozygosity"
title = "B"
ymin <- .05
ymax <- .25
{
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5, ymax, "B", cex=text.size, family="sans")
#title(title, adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
y1<-temp[temp[,1] == orig.xs[1],,]
y2<-temp[temp[,1] == orig.xs[2],,]
y3<-temp[temp[,1] == orig.xs[3],,]
y4<-temp[temp[,1] == orig.xs[4],,]
y5<-temp[temp[,1] == orig.xs[5],,]
y6<-temp[temp[,1] == orig.xs[6],,]
y7<-temp[temp[,1] == orig.xs[7],,]
y8<-temp[temp[,1] == orig.xs[8],,]
xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
lwd = 1, col = gt.cols[col], code=3, angle=90, length=0.1)
lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = gt.cols[col], lwd = lwd, lty = lty[col])
points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = gt.cols[col], pch = pch[col], cex = 2) #pt.cex
print(mean(y1[,var]))
print(mean(y7[,var]))
col <- col+1
}
#legend('bottomleft', legend = c('no mig', '1 mig/gen'), col = gt.cols, pch = pch, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
