rep      = smry[,11]  #replicate number
para     = smry[,12]
noff     = smry[,13]  #number of offspring produced that year
fstvs    = smry[,14]  #fst vs the source pop
fisvs    = smry[,15]  #fis vs the source pop
col      = smry[,12] #p
############Averages
plot(-100, -100 , xlab="year", ylab="population size", xlim=c(0, max(yr)), ylim=c(0, max(n)))
for(p in unique(para)){
dat = smry[smry[,12]==p,,drop=FALSE]
avg = aggregate(x = dat[,2], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[p], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Ho", xlim=c(0, max(yr)), ylim=c((min(Ho)), (max(Ho))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,5], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst", xlim=c(0, max(yr)), ylim=c((min(fst)-.01), (max(fst))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,10], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst vs source", xlim=c(0, max(yr)), ylim=c(0, max(fstvs)))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,14], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="prop migrant SNPs", xlim=c(0, max(yr)), ylim=c(0, max(smry[,17])))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,17], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
red = read.table("ABMrun_3.1.23_d_quickie_repsuc.csv", header=T, sep=",")
rev = read.table("ABMrun_3.1.23_h_quickie_repsuc.csv", header=T, sep=",")
rep = read.table("ABMrun_3.1.23_c_quickie_repsuc.csv", header=T, sep=",")
rep[is.na(rep)] <- 0
red[is.na(red)] <- 0
rev[is.na(rev)] <- 0
#give each parameter set a unique identifier
red[,10] = red[,10]+3
table(red[,10])
rev[,10] = rev[,10]+6
table(rev[,10])
rep = rbind(rep, red, rev)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
col = rep[,10] #-4  #color by parameter
para = rep[,10]
yr  = rep[,1]   #year
n   = rep[,2]   #n born
LRS = rep[,3]   #mean LRS
SD  = rep[,4]   #SD of LRS
LRSf= rep[,5]   #female LRS
LRSm= rep[,6]   #male LRS
RRS = rep[,7]   #mean RRS
SDR = rep[,8]   #SD of RRS
replic = rep[,9]   #replicate
LRSmig = rep[,11] #LRS of migrants
LRSnat = rep[,12] #LRS of natives
#Averages
plot(-100, -100 , xlab="year", ylab="LRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(LRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,3], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="RRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(RRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,7], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
setwd("C:/Users/ginab/Box/New Computer/Auburn/Data/ComplexModel_ABM/Output_local/holding") #setwd("C:/Users/Gina/Desktop/2022/ComplexModel_ABM")
directory = getwd()
outdir = paste(directory, "/figs/", sep = "")
tat = read.table("ABMrun_3.1.23_e_quickie_summary.csv", header=T, sep=",")
tab = read.table("ABMrun_3.1.23_f_quickie_summary.csv", header=T, sep=",")
smry = read.table("ABMrun_3.1.23_i_quickie_summary.csv", header=T, sep=",")
tab[,12] = tab[,12]+3
table(tab[,12])
smry[,12] = smry[,12]+6
table(smry[,12])
smry = rbind(tat, tab, smry)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
yr       = smry[,1]   #year
n        = smry[,2]   #population size
propmig  = smry[,3]   #proportion of pop that are migrants
He       = smry[,4]   #He
Ho       = smry[,5]   #Ho
fis      = smry[,6]   #fis vs initialized pop
nadult   = smry[,7]   #number of indv that have reached maturity
sx       = smry[,8]   #sex ratio
nmig     = smry[,9]   #number of migrants
fst      = smry[,10]  #fst vs initialized pop
rep      = smry[,11]  #replicate number
para     = smry[,12]
noff     = smry[,13]  #number of offspring produced that year
fstvs    = smry[,14]  #fst vs the source pop
fisvs    = smry[,15]  #fis vs the source pop
col      = smry[,12] #pa
plot(-100, -100 , xlab="year", ylab="population size", xlim=c(0, max(yr)), ylim=c(0, max(n)))
for(p in unique(para)){
dat = smry[smry[,12]==p,,drop=FALSE]
avg = aggregate(x = dat[,2], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[p], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Ho", xlim=c(0, max(yr)), ylim=c((min(Ho)), (max(Ho))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,5], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Ho", xlim=c(0, max(yr)), ylim=c((min(Ho)), (max(Ho))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,5], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst", xlim=c(0, max(yr)), ylim=c((min(fst)-.01), (max(fst))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,10], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst vs source", xlim=c(0, max(yr)), ylim=c(0, max(fstvs)))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,14], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="prop migrant SNPs", xlim=c(0, max(yr)), ylim=c(0, max(smry[,17])))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,17], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fis", xlim=c(0, max(yr)), ylim=c((min(fis)), (max(fis))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,6], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
red = read.table("ABMrun_3.1.23_f_quickie_repsuc.csv", header=T, sep=",")
rev = read.table("ABMrun_3.1.23_i_quickie_repsuc.csv", header=T, sep=",")
rep = read.table("ABMrun_3.1.23_e_quickie_repsuc.csv", header=T, sep=",")
rep[is.na(rep)] <- 0
red[is.na(red)] <- 0
rev[is.na(rev)] <- 0
#give each parameter set a unique identifier
red[,10] = red[,10]+3
table(red[,10])
rev[,10] = rev[,10]+6
table(rev[,10])
rep = rbind(rep, red, rev)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
col = rep[,10] #-4  #color by parameter
para = rep[,10]
yr  = rep[,1]   #year
n   = rep[,2]   #n born
LRS = rep[,3]   #mean LRS
SD  = rep[,4]   #SD of LRS
LRSf= rep[,5]   #female LRS
LRSm= rep[,6]   #male LRS
RRS = rep[,7]   #mean RRS
SDR = rep[,8]   #SD of RRS
replic = rep[,9]   #replicate
LRSmig = rep[,11] #LRS of migrants
LRSnat = rep[,12] #L
#Averages
plot(-100, -100 , xlab="year", ylab="LRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(LRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,3], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
#Averages
plot(-100, -100 , xlab="year", ylab="LRS", xlim=c(min(yr), max(yr)), ylim=c(0, 6))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,3], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="RRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(RRS)))
#Averages
plot(-100, -100 , xlab="year", ylab="LRS", xlim=c(min(yr), max(yr)), ylim=c(0, 6))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,3], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="RRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(RRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,7], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
setwd("C:/Users/ginab/Box/New Computer/Auburn/Data/ComplexModel_ABM/Output_local/holding") #setwd("C:/Users/Gina/Desktop/2022/ComplexModel_ABM")
directory = getwd()
outdir = paste(directory, "/figs/", sep = "")
tat = read.table("ABMrun_3.3.23_a_quickie_summary.csv", header=T, sep=",")
tab = read.table("ABMrun_3.3.23_b_quickie_summary.csv", header=T, sep=",")
smry = read.table("ABMrun_3.3.23_g_quickie_summary.csv", header=T, sep=",")
tab[,12] = tab[,12]+3
table(tab[,12])
smry[,12] = smry[,12]+6
table(smry[,12])
smry = rbind(tat, tab, smry)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
yr       = smry[,1]   #year
n        = smry[,2]   #population size
propmig  = smry[,3]   #proportion of pop that are migrants
He       = smry[,4]   #He
Ho       = smry[,5]   #Ho
fis      = smry[,6]   #fis vs initialized pop
nadult   = smry[,7]   #number of indv that have reached maturity
sx       = smry[,8]   #sex ratio
nmig     = smry[,9]   #number of migrants
fst      = smry[,10]  #fst vs initialized pop
rep      = smry[,11]  #replicate number
para     = smry[,12]
noff     = smry[,13]  #number of offspring produced that year
fstvs    = smry[,14]  #fst vs the source pop
fisvs    = smry[,15]  #fis vs the source pop
col      = smry[,12] #
############Averages
plot(-100, -100 , xlab="year", ylab="population size", xlim=c(0, max(yr)), ylim=c(0, max(n)))
for(p in unique(para)){
dat = smry[smry[,12]==p,,drop=FALSE]
avg = aggregate(x = dat[,2], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[p], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Ho", xlim=c(0, max(yr)), ylim=c((min(Ho)), (max(Ho))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,5], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst", xlim=c(0, max(yr)), ylim=c((min(fst)-.01), (max(fst))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,10], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst vs source", xlim=c(0, max(yr)), ylim=c(0, max(fstvs)))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,14], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="prop migrant SNPs", xlim=c(0, max(yr)), ylim=c(0, max(smry[,17])))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,17], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
red = read.table("ABMrun_3.3.23_b_quickie_repsuc.csv", header=T, sep=",")
rev = read.table("ABMrun_3.3.23_g_quickie_repsuc.csv", header=T, sep=",")
rep = read.table("ABMrun_3.3.23_a_quickie_repsuc.csv", header=T, sep=",")
rep[is.na(rep)] <- 0
red[is.na(red)] <- 0
rev[is.na(rev)] <- 0
#give each parameter set a unique identifier
red[,10] = red[,10]+3
table(red[,10])
rev[,10] = rev[,10]+6
table(rev[,10])
rep = rbind(rep, red, rev)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
col = rep[,10] #-4  #color by parameter
para = rep[,10]
yr  = rep[,1]   #year
n   = rep[,2]   #n born
LRS = rep[,3]   #mean LRS
SD  = rep[,4]   #SD of LRS
LRSf= rep[,5]   #female LRS
LRSm= rep[,6]   #male LRS
RRS = rep[,7]   #mean RRS
SDR = rep[,8]   #SD of RRS
replic = rep[,9]   #replicate
LRSmig = rep[,11] #LRS of migrants
LRSnat = rep[,12] #LRS
#Averages
plot(-100, -100 , xlab="year", ylab="LRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(LRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,3], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="RRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(RRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,7], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
setwd("C:/Users/ginab/Box/New Computer/Auburn/Data/ComplexModel_ABM/Output_local/holding") #setwd("C:/Users/Gina/Desktop/2022/ComplexModel_ABM")
directory = getwd()
outdir = paste(directory, "/figs/", sep = "")
tat = read.table("ABMrun_3.3.23_c_quickie_summary.csv", header=T, sep=",")
tab = read.table("ABMrun_3.3.23_d_quickie_summary.csv", header=T, sep=",")
smry = read.table("ABMrun_3.3.23_h_quickie_summary.csv", header=T, sep=",")
tab[,12] = tab[,12]+3
table(tab[,12])
smry[,12] = smry[,12]+6
table(smry[,12])
smry = rbind(tat, tab, smry)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
yr       = smry[,1]   #year
n        = smry[,2]   #population size
propmig  = smry[,3]   #proportion of pop that are migrants
He       = smry[,4]   #He
Ho       = smry[,5]   #Ho
fis      = smry[,6]   #fis vs initialized pop
nadult   = smry[,7]   #number of indv that have reached maturity
sx       = smry[,8]   #sex ratio
nmig     = smry[,9]   #number of migrants
fst      = smry[,10]  #fst vs initialized pop
rep      = smry[,11]  #replicate number
para     = smry[,12]
noff     = smry[,13]  #number of offspring produced that year
fstvs    = smry[,14]  #fst vs the source pop
fisvs    = smry[,15]  #fis vs the source pop
col      = smry[,12] #para
############Averages
plot(-100, -100 , xlab="year", ylab="population size", xlim=c(0, max(yr)), ylim=c(0, max(n)))
for(p in unique(para)){
dat = smry[smry[,12]==p,,drop=FALSE]
avg = aggregate(x = dat[,2], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[p], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Ho", xlim=c(0, max(yr)), ylim=c((min(Ho)), (max(Ho))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,5], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst", xlim=c(0, max(yr)), ylim=c((min(fst)-.01), (max(fst))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,10], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst vs source", xlim=c(0, max(yr)), ylim=c(0, max(fstvs)))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,14], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="prop migrant SNPs", xlim=c(0, max(yr)), ylim=c(0, max(smry[,17])))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,17], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
red = read.table("ABMrun_3.3.23_d_quickie_repsuc.csv", header=T, sep=",")
rev = read.table("ABMrun_3.3.23_h_quickie_repsuc.csv", header=T, sep=",")
rep = read.table("ABMrun_3.3.23_c_quickie_repsuc.csv", header=T, sep=",")
rep[is.na(rep)] <- 0
red[is.na(red)] <- 0
rev[is.na(rev)] <- 0
#give each parameter set a unique identifier
red[,10] = red[,10]+3
table(red[,10])
rev[,10] = rev[,10]+6
table(rev[,10])
rep = rbind(rep, red, rev)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
col = rep[,10] #-4  #color by parameter
para = rep[,10]
yr  = rep[,1]   #year
n   = rep[,2]   #n born
LRS = rep[,3]   #mean LRS
SD  = rep[,4]   #SD of LRS
LRSf= rep[,5]   #female LRS
LRSm= rep[,6]   #male LRS
RRS = rep[,7]   #mean RRS
SDR = rep[,8]   #SD of RRS
replic = rep[,9]   #replicate
LRSmig = rep[,11] #LRS of migrants
LRSnat = rep[,12] #LRS
#Averages
plot(-100, -100 , xlab="year", ylab="LRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(LRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,3], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="RRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(RRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,7], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
setwd("C:/Users/ginab/Box/New Computer/Auburn/Data/ComplexModel_ABM/Output_local/holding") #setwd("C:/Users/Gina/Desktop/2022/ComplexModel_ABM")
directory = getwd()
outdir = paste(directory, "/figs/", sep = "")
tat = read.table("ABMrun_3.3.23_e_quickie_summary.csv", header=T, sep=",")
tab = read.table("ABMrun_3.3.23_f_quickie_summary.csv", header=T, sep=",")
smry = read.table("ABMrun_3.3.23_i_quickie_summary.csv", header=T, sep=",")
tab[,12] = tab[,12]+3
table(tab[,12])
smry[,12] = smry[,12]+6
table(smry[,12])
smry = rbind(tat, tab, smry)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
yr       = smry[,1]   #year
n        = smry[,2]   #population size
propmig  = smry[,3]   #proportion of pop that are migrants
He       = smry[,4]   #He
Ho       = smry[,5]   #Ho
fis      = smry[,6]   #fis vs initialized pop
nadult   = smry[,7]   #number of indv that have reached maturity
sx       = smry[,8]   #sex ratio
nmig     = smry[,9]   #number of migrants
fst      = smry[,10]  #fst vs initialized pop
rep      = smry[,11]  #replicate number
para     = smry[,12]
noff     = smry[,13]  #number of offspring produced that year
fstvs    = smry[,14]  #fst vs the source pop
fisvs    = smry[,15]  #fis vs the source pop
col      = smry[,12] #pa
############Averages
plot(-100, -100 , xlab="year", ylab="population size", xlim=c(0, max(yr)), ylim=c(0, max(n)))
for(p in unique(para)){
dat = smry[smry[,12]==p,,drop=FALSE]
avg = aggregate(x = dat[,2], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[p], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Ho", xlim=c(0, max(yr)), ylim=c((min(Ho)), (max(Ho))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,5], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst", xlim=c(0, max(yr)), ylim=c((min(fst)-.01), (max(fst))))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,10], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="Fst vs source", xlim=c(0, max(yr)), ylim=c(0, max(fstvs)))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,14], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="prop migrant SNPs", xlim=c(0, max(yr)), ylim=c(0, max(smry[,17])))
for(d in unique(para)){
dat = smry[smry[,12]==d,,drop=FALSE]
avg = aggregate(x = dat[,17], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
red = read.table("ABMrun_3.3.23_f_quickie_repsuc.csv", header=T, sep=",")
rev = read.table("ABMrun_3.3.23_i_quickie_repsuc.csv", header=T, sep=",")
rep = read.table("ABMrun_3.3.23_e_quickie_repsuc.csv", header=T, sep=",")
rep[is.na(rep)] <- 0
red[is.na(red)] <- 0
rev[is.na(rev)] <- 0
#give each parameter set a unique identifier
red[,10] = red[,10]+3
table(red[,10])
rev[,10] = rev[,10]+6
table(rev[,10])
rep = rbind(rep, red, rev)
library(colorspace)
gt.cols <- qualitative_hcl(8, "Dark2") #ghibli_palette('PonyoMedium')#[4]
lt.gt.col <- qualitative_hcl(8, "Pastel1") #ghibli_palette('PonyoLight')[4]
col = rep[,10] #-4  #color by parameter
para = rep[,10]
yr  = rep[,1]   #year
n   = rep[,2]   #n born
LRS = rep[,3]   #mean LRS
SD  = rep[,4]   #SD of LRS
LRSf= rep[,5]   #female LRS
LRSm= rep[,6]   #male LRS
RRS = rep[,7]   #mean RRS
SDR = rep[,8]   #SD of RRS
replic = rep[,9]   #replicate
LRSmig = rep[,11] #LRS of migrants
LRSnat = rep[,12] #LRS of
#Averages
plot(-100, -100 , xlab="year", ylab="LRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(LRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,3], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
plot(-100, -100 , xlab="year", ylab="RRS", xlim=c(min(yr), max(yr)), ylim=c(0, max(RRS)))
for(d in unique(para)){
dat = rep[rep[,10]==d,,drop=FALSE]
avg = aggregate(x = dat[,7], by = list(dat[,1]), FUN = "mean")
lines(avg[,1], avg[,2], col=gt.cols[d], lwd = 3)
}
