# Loop through rows of the congeno matrix
for (row_index in 1:nrow(congeno)) {
row <- congeno[row_index, ]
consecutive_ones_count <- count_consecutive_ones(row)
babies[row_index, 17] <- consecutive_ones_count
}
#calculate relative fitness (heterozygosity)
het <- matrix(nrow=nrow(babygeno), ncol=1)
for(g in 1:nrow(drift)){
w <- sum(drift[g ,seq(1,ncol(drift),2)]!=drift[g,seq(2,ncol(drift),2)])/(ncol(drift)/2)
het[g,1] <- w
}
babies[,11] <- het
#note that only nSNPs (drift SNPs) are being considered here
#calculate ROHs for generated genotypes across nSNPs only
bbyROH <- matrix(nrow=nrow(babygeno), ncol=1)
for (row in 1:nrow(drift)) {
current_run_length <- 0
longest_run <- 0
for (col in 1:(ncol(drift) - 1)) {
if (drift[row, col] == drift[row, col + 1]) {
# Columns are the same (homozygous)
current_run_length <- current_run_length + 1
} else {
# Columns are different (heterozygous)
if (current_run_length > longest_run) {
longest_run <- current_run_length
}
current_run_length <- 0
}
}
# Check for the last run
if (current_run_length > longest_run) {
longest_run <- current_run_length
}
# Store the result in the matrix
bbyROH[row, ] <- longest_run
}
babies[,19] = bbyROH
#calculate proportion of migrant SNPs
#migrantgen <- babygeno[, -c(ncol(babygeno)-(nSNP.mig*2)-(nSNP.cons*2)+1:ncol(babygeno)-(nSNP.cons*2))]
#migrantgen <- matrix(unlist(migrantgen), nrow = bb, ncol = nSNP.mig*2)
mSNP <- matrix(nrow = bb, ncol = 1)
for(q in 1:nrow(miggeno)){
ww <- sum(miggeno[q,])/ncol(miggeno)
mSNP[q,1] <- ww
}
babies[,12] <- mSNP
# #create matrix for the number of effective parents
# NE = matrix(nrow=1, ncol=12)
# colnames(NE) <- c("year", "eff_mom", "eff_dad", "nbabies", "naliveadults", "possible_mom", "possible_dad", "eff_mig", "parameterset", "replicate", "project", "group")
#
# NE[1,1] = y                             #grab year
# NE[1,2] = length(unique(babies[,2]))    #grab n unique effective moms
# NE[1,3] = length(unique(babies[,3]))    #grab n unique effective dads
# NE[1,4] = nrow(babies)                  #grab n babies
#
# alive = pop[pop[,8]==1,,drop=FALSE]
# adult = alive[alive[,4]!=0,,drop=FALSE]
# adult_f = adult[adult[,5]==0,,drop=FALSE]
# adult_m = adult[adult[,5]==1,,drop=FALSE]
# NE[1,5] = nrow(adult)                   #grab n alive adults
# NE[1,6] = nrow(adult_f)                 #grab n possible moms
# NE[1,7] = nrow(adult_m)                 #grab n possible dads
#
# mig_f = babies[babies[,2]<=-2,,drop=FALSE]
# mig_m = babies[babies[,3]<=-2,,drop=FALSE]
# NE[1,8] = length(unique(mig_f[,2])) + length(unique(mig_m[,3]))    #grab number of migrant parents
#
# NE[1,9] = r
# NE[1,10] = rr
# NE[1,11] = prj
# NE[1,12] = grp
#
# if(isTRUE(y == 1 && r == 1 && rr == 1)){   #create new table for first run
#   write.table(NE, paste(directory, "/Output/Ne_counts.csv", sep=""), sep=",", col.names=TRUE, append=FALSE, quote=FALSE, row.names=FALSE)
# }else{                                     #append to the previously made table if not the first run
#   write.table(NE, paste(directory, "/Output/Ne_counts.csv", sep=""), sep=",", col.names=FALSE, append=TRUE, quote=FALSE, row.names=FALSE)
# }
alive
adult
adult_f
adult_m
mig_f
mig_m
p1a = read.table("p_2.5.24_LL1a_mi_all_summary.csv", header=T, sep=",") #end_9.18.23_LL1a ##comb_fin_5.11.23_1LL1a_all_summary
p10 = read.table("p_2.5.24_LL10_mi_all_summary.csv", header=T, sep=",") #end_comb_LL10 ##comb_fin_5.11.23_1LL10_all_summary
#p10[,19] = "LL10"
p1b = read.table("p_2.5.24_LL1b_mi_all_summary.csv", header=T, sep=",") #end_comb_LL1b ##comb_fin_6.1.23_LL1b_all_summary #has 35 pops that crashed!!!
setwd("C:/Users/ginab/Box/New Computer/Auburn/Data/ComplexModel_ABM/Output_local/2024") #setwd("C:/Users/Gina/Desktop/2022/ComplexModel_ABM")
directory = getwd()
outdir = paste(directory, "/figs/", sep = "")
library(colorspace)
library(scales)
library(FSA)
gt.cols <- c("grey", "firebrick3", "darkorange1", "gold") #"springgreen3"
#plot specs
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
#poly specs
dens = NULL #c(100, 100, 100, 100, NULL, NA, NULL, NA)
ang = 45
bo = NA #c(NULL, NULL, NULL, NULL, NA, NA, NA, NA) #alpha(gt.cols[col], .8)
alf = c(.7, .7, .7, .7, .7, .7, .7, .7) #.7, .7, .7, .7
lty = c(3,3,3,3,1,1,1,1)
#Supp Figure 2
#data for the proportion of populations that crashed
{
p1a = read.table("p_2.5.24_LL1a_mi_all_summary.csv", header=T, sep=",") #end_9.18.23_LL1a ##comb_fin_5.11.23_1LL1a_all_summary
p10 = read.table("p_2.5.24_LL10_mi_all_summary.csv", header=T, sep=",") #end_comb_LL10 ##comb_fin_5.11.23_1LL10_all_summary
#p10[,19] = "LL10"
p1b = read.table("p_2.5.24_LL1b_mi_all_summary.csv", header=T, sep=",") #end_comb_LL1b ##comb_fin_6.1.23_LL1b_all_summary #has 35 pops that crashed!!!
#p1b[,19] = "p1b"
p1c = read.table("p_2.5.24_LL1c_mi_all_summary.csv", header=T, sep=",") #end_comb_LL1c ##fin_6.1.23_LL1c_all_summary #has 37 pops that crashed!!!
#p1c[,19] = "p1c"
smry = rbind(p10, p1a, p1b, p1c)
par(mfrow = c(1,1)) #go back to default where only one fig per panel
gt.cols = "firebrick3"
lty = c(3, 1, 2, 4)
pch = c(18, 19, 15, 17)
alf = c(1, .8, .6, .4)
A = table(p10[,1])
A = as.numeric(A)
B = table(p1a[,1])
B = as.numeric(B)
C = table(p1b[,1])
C = as.numeric(C)
D = table(p1c[,1])
D = as.numeric(D)
var = rbind(A, B, C, D)
varname = "Proportion of Viable\n Populations (%)"
title = ""
ymin <- 0
ymax <- 1
{
par(mar = c(4,6,2,2))
## make plot
plot(-1,-1, xlim = c(0, 350), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
#title(title, adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(0, .2, .4, .6, .8, 1), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
abline(v = 151, lty = 2, col = "grey")
col <- 1
for(m in 1:nrow(var)){
plt.y = var[m,]/100  #turn into a proportion
plt.x = c(0:350)
lines(plt.x, plt.y, col = alpha(gt.cols, alf[col]), lwd = lwd, lty = lty[col])
col = col+1
}
#legend("left", legend = c('no mig', '1 mig/yr','burst', 'pulse'), col = alpha(gt.cols, alf), lty = lty, lwd = lwd, bty = 'n', cex = (text.size-.5), horiz = FALSE, xjust=0, x.intersp = 0.1, y.intersp=0.3, seg.len = .75)
#legend('bottom', legend = c('no mig', '1 mig/gen', "burst", "pulse"), col = alpha(gt.cols, alf), lty = lty, lwd = lwd, bty = 'n', cex = text.size, text.width = text.size, ncol = 2) #pt.cex = text.size
}
}
A
B
C
D
###Supp Figure 5
#LRS
r30 = read.table("p_1.30.24_LL30_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL30_all_repsuc
r3a = read.table("p_1.30.24_LL3a_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3a_all_repsuc
r3b = read.table("p_1.30.24_LL3b_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3b_all_repsuc
r3c = read.table("p_1.30.24_LL3c_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3c_all_repsuc
smry = rbind(r30, r3a, r3b, r3c)
{
r30 = read.table("end_9.18.23_LL30_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL30_all_repsuc
r3a = read.table("end_9.18.23_LL3a_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3a_all_repsuc
r3b = read.table("end_9.18.23_LL3b_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3b_all_repsuc
r3c = read.table("end_9.18.23_LL3c_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3c_all_repsuc
r10 = read.table("end_LL10_comb_repsuc.csv", header=T, sep=",") #fin_5.11.23_1LL10_all_repsuc
r10[,13] = "r10"
r1a = read.table("end_9.18.23_LL1a_all_repsuc.csv", header=T, sep=",") #comb_fin_5.11.23_1LL1a_all_repsuc
r70 = read.table("end_9.18.23_LL70_all_repsuc.csv", header=T, sep=",") #fin_5.11.23_1LL70_all_repsuc
r7a = read.table("end_9.18.23_LL7a_all_repsuc.csv", header=T, sep=",") #fin_5.11.23_1LL7a_all_repsuc
r1b = read.table("end_LL1b_comb_repsuc.csv", header=T, sep=",")  #comb_fin_6.1.23_LL1b_all_repsuc #has 35 pops that crashed!!!
r1b[,13] = "r1b"
r1c = read.table("end_LL1c_comb_repsuc.csv", header=T, sep=",")  #fin_6.1.23_LL1c_all_repsuc #has 37 pops that crashed!!!
r1c[,13] = "r1c"
r7b = read.table("end_9.18.23_LL7b_all_repsuc.csv", header=T, sep=",") #fin_6.1.23_LL7b_all_repsuc
r7c = read.table("end_9.18.23_LL7c_all_repsuc.csv", header=T, sep=",") #fin_6.1.23_LL7c_all_repsuc
ra = read.table("end_9.18.23_nbtl3a_all_repsuc.csv", header=T, sep=",") #fin_6.1.23_nbtl3a_all_repsuc
r0 = read.table("end_9.18.23_nbtl30_all_repsuc.csv", header=T, sep=",") #fin_6.1.23_nbtl30_all_repsuc
smry = rbind(r0, r10, r30, r70)
gt.cols = c("grey","firebrick3", "darkorange1", "gold")
#smry_new = matrix(nrow = 1, ncol = ncol(smry))
#colnames(smry_new) <- colnames(smry)
#for(u in 1:nrow(smry)){
#  if(is.na(smry[u,3])==FALSE){
#    rbind(smry_new,smry[u,])
#  }
#}
smry_new = smry[!is.na(smry[,2]),,drop=FALSE]
smry_new = smry_new[smry_new[,1]<=348,,drop=FALSE]
smry = smry_new
dens = NULL #c(100, 100, 100, 100, NULL, NA, NULL, NA)
ang = 45
bo = NA #c(NULL, NULL, NULL, NULL, NA, NA, NA, NA) #alpha(gt.cols[col], .8)
alf = c(.7, .7, .7, .7, .7, .7, .7, .7) #.7, .7, .7, .7
{
var = 3
varname = "Lifetime Reproductive \n Success"
title = ""
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 3.5 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty = c(3,3,3,3)
pch = c(18, 19, 15, 17, 18, 19, 15, 17)
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', main = title, xlab = '', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5, ymax, "A", cex=text.size, family="sans")
#title("A", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
TBL = NULL
col <- 1
for(c in unique(smry[,13])){
print(c)
temp <- smry[smry[,13] == c,, drop=FALSE] #separate by parameter set/aka project name
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1]))+1, ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
#tbl[(d+1),5] = as.character(dat[1,19])
}
TBL = rbind(TBL, tbl)
tbl = tbl[!is.na(tbl[,1]),,drop=FALSE]
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 15, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
smry = rbind(ra, r1a, r3a, r7a)
gt.cols = c("grey","firebrick3", "darkorange1", "gold")
smry_new = smry[!is.na(smry[,2]),,drop=FALSE]
smry_new = smry_new[smry_new[,1]<=348,,drop=FALSE]
smry = smry_new
{
var = 3
varname = "Lifetime Reproductive \n Success"
title = ""
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 3.5 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty = c(1,1,1,1)
pch = c(18, 19, 15, 17, 18, 19, 15, 17)
par(mar = c(2,4,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', main = title, xlab = '', ylab = '',
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5, ymax, "B", cex=text.size, family="sans")
#title("B", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
TBL = NULL
col <- 1
for(c in unique(smry[,13])){
print(c)
temp <- smry[smry[,13] == c,, drop=FALSE] #separate by parameter set/aka project name
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1]))+1, ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
#tbl[(d+1),5] = as.character(dat[1,19])
}
tbl = tbl[!is.na(tbl[,1]),,drop=FALSE]
TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 15, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
smry = rbind(r1b, r3b, r7b)
gt.cols = c("firebrick3", "darkorange1", "gold")
smry_new = smry[!is.na(smry[,2]),,drop=FALSE]
smry_new = smry_new[smry_new[,1]<=348,,drop=FALSE]
smry = smry_new
{
var = 3
varname = "Lifetime Reproductive \n Success"
title = ""
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 3.5 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty = c(2, 2, 2)
pch = c(18, 19, 15, 17, 18, 19, 15, 17)
par(mar = c(4,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', main = title, xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5, ymax, "C", cex=text.size, family="sans")
#title("C", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
TBL = NULL
col <- 1
for(c in unique(smry[,13])){
print(c)
temp <- smry[smry[,13] == c,, drop=FALSE] #separate by parameter set/aka project name
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1]))+1, ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
#tbl[(d+1),5] = as.character(dat[1,19])
}
TBL = rbind(TBL, tbl)
tbl = tbl[!is.na(tbl[,1]),,drop=FALSE]
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 15, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
smry = rbind(r1c, r3c, r7c)
gt.cols = c("firebrick3", "darkorange1", "gold")
smry_new = smry[!is.na(smry[,2]),,drop=FALSE]
smry_new = smry_new[smry_new[,1]<=348,,drop=FALSE]
smry = smry_new
{
var = 3
varname = "Lifetime Reproductive \n Success"
title = ""
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 3.5 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty = c(4, 4, 4)
pch = c(18, 19, 15, 17, 18, 19, 15, 17)
par(mar = c(4,4,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', main = title, xlab = 'Year', ylab = '',
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5, ymax, "D", cex=text.size, family="sans")
#title("D", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
TBL = NULL
col <- 1
for(c in unique(smry[,13])){
print(c)
temp <- smry[smry[,13] == c,, drop=FALSE] #separate by parameter set/aka project name
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1]))+1, ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
#tbl[(d+1),5] = as.character(dat[1,19])
}
TBL = rbind(TBL, tbl)
tbl = tbl[!is.na(tbl[,1]),,drop=FALSE]
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 15, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
}
###Supp Figure 5
#LRS
r30 = read.table("p_1.30.24_LL30_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL30_all_repsuc
r3a = read.table("p_1.30.24_LL3a_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3a_all_repsuc
r3b = read.table("p_1.30.24_LL3b_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3b_all_repsuc
r3c = read.table("p_1.30.24_LL3c_mi_all_repsuc.csv", header=T, sep=",") #fin_5.10.23_1LL3c_all_repsuc
smry = rbind(r30, r3a, r3b, r3c)
gt.cols = c("grey","firebrick3", "darkorange1", "gold")
range(smry[,2])
head(smry[,2])
smry_new = smry[!is.na(smry[,2]),,drop=FALSE]
smry_new = smry_new[smry_new[,1]<=348,,drop=FALSE]
smry = smry_new
dens = NULL #c(100, 100, 100, 100, NULL, NA, NULL, NA)
ang = 45
bo = NA #c(NULL, NULL, NULL, NULL, NA, NA, NA, NA) #alpha(gt.cols[col], .8)
alf = c(.7, .7, .7, .7, .7, .7, .7, .7) #.7, .7, .7, .7
{
var = 3
varname = "Lifetime Reproductive \n Success"
title = ""
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 3.5 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
lty = c(3,3,3,3)
pch = c(18, 19, 15, 17, 18, 19, 15, 17)
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', main = title, xlab = '', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5, ymax, "A", cex=text.size, family="sans")
#title("A", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
TBL = NULL
col <- 1
for(c in unique(smry[,13])){
print(c)
temp <- smry[smry[,13] == c,, drop=FALSE] #separate by parameter set/aka project name
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1]))+1, ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
#tbl[(d+1),5] = as.character(dat[1,19])
}
TBL = rbind(TBL, tbl)
tbl = tbl[!is.na(tbl[,1]),,drop=FALSE]
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 15, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
is.wholenumber(y/1)
