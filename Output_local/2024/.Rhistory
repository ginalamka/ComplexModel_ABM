a3e = read.table("a_2.22.24_LL3e_all_summary.csv", header=T, sep=",")
a3f = read.table("a_2.22.24_LL3f_all_summary.csv", header=T, sep=",")
#smry = rbind(a30, a3a, a3b, a3c)
a10 = read.table("a_2.22.24_LL10_all_summary.csv", header=T, sep=",")
a1a = read.table("a_2.22.24_LL1a_all_summary.csv", header=T, sep=",")
a1b = read.table("a_2.22.24_LL1b_all_summary.csv", header=T, sep=",")
a1c = read.table("a_2.22.24_LL1c_all_summary.csv", header=T, sep=",")
a70 = read.table("a_2.22.24_LL70_all_summary.csv", header=T, sep=",")
a7a = read.table("a_2.22.24_LL7a_all_summary.csv", header=T, sep=",")
a7b = read.table("a_2.22.24_LL7b_all_summary.csv", header=T, sep=",")
a7c = read.table("a_2.22.24_LL7c_all_summary.csv", header=T, sep=",")
aHH0 = read.table("a_2.22.24_HH30_all_summary.csv", header=T, sep=",")
aHLa = read.table("a_2.22.24_HL3a_all_summary.csv", header=T, sep=",")
aHHa = read.table("a_2.22.24_HH3a_all_summary.csv", header=T, sep=",")
aLHa = read.table("a_2.22.24_LH3a_all_summary.csv", header=T, sep=",")
aLLa = read.table("a_2.22.24_LL3a_all_summary.csv", header=T, sep=",")
smry = rbind(aHH0, aHLa, aHHa, aLHa, aLLa)
ab0 = read.table("a_2.22.24_LLnbtl0_all_summary.csv", header=T, sep=",")
aba = read.table("a_2.22.24_LLnbtla_all_summary.csv", header=T, sep=",")
a30. = read.table("a_2.22.24_LL30._all_summary.csv", header=T, sep=",")
a3a. = read.table("a_2.22.24_LL3a._all_summary.csv", header=T, sep=",")
a3b. = read.table("a_2.22.24_LL3b._all_summary.csv", header=T, sep=",")
a3c. = read.table("a_2.22.24_LL3c._all_summary.csv", header=T, sep=",")
#smry_h = smry[smry[,1]!="year",,drop=FALSE]
#smry <- smry_h
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##Figure 2
{
p70 = read.table("p_2.5.24_LL70_mi_all_summary_comb.csv", header=T, sep=",") #end_9.18.23_LL70 ##fin_5.11.23_1LL70_all_summary
p70[,19] = "LL70"
p30 = read.table("p_1.30.24_LL30_mi_all_summary.csv", header=T, sep=",") #end_9.18.23_LL30 ##fin_5.10.23_1LL30_all_summary
p10 = read.table("p_2.5.24_LL10_mi_all_summary.csv", header=T, sep=",") #end_comb_LL10 ##comb_fin_5.11.23_1LL10_all_summary
b0 = read.table("p_2.5.24_LLnbtl0_mi_all_summary_comb.csv", header=T, sep=",") #end_9.18.23_nbtl30 ##fin_6.1.23_nbtl30_all_summary
b0[,19] = "nbtl0"
smry = rbind(b0,p10, p30, p70) #p50,
gt.cols <- c("grey", "firebrick3", "darkorange1", "gold")
#make panel order by row, with 2 rows and 2 columns
par(mfrow = c(2,2))
#1A - population size ~ year, by = IUCN status
#will want to get total pop size, therefore number adults and babies and numboff
par(mar = c(2,6,2,2))
plot(-20, -20 , xlab="Year", ylab="Population Size", xlim=c(0, 350), ylim=c(0, 1000),
cex.axis = text.size, cex.lab = text.size)
text(-5,1000, "A", cex=text.size, family="sans")
#title("A", adj = 0, cex.main = text.size, line = 2)
col=1
for(z in unique(smry[,19])){
zsmry = smry[smry[,19]==z,,drop=FALSE]
for(b in 1:length(unique(zsmry[,20]))){
bsmry = zsmry[zsmry[,20]==b,,drop=FALSE]
for(p in 1:length(unique(smry[,11]))){
psmry = bsmry[bsmry[,11]==p,,drop=FALSE]
lines(psmry[,1], psmry[,2], col=gt.cols[col], pch=16)
}
}
col=col+1
}
#legend('topleft', legend = "A", cex = text.size)
#legend('bottomright', legend = c('critically endangered', 'endangered','vulnerable'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
#legend('bottomright', legend = c('LC', 'CR','EN', 'VU'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
#1B - delta H ~ year, by = IUCN status [plus no crash]
#will want CR at bottom
smry_h = rbind(ab0,a10, a30, a70)
smry_h = smry_h[smry_h[,1]!="year",,drop=FALSE]
smry[,5] <- as.numeric(smry_h[,5])
{
var = 5
varname = "Heterozygosity"
title = "Fig 1B"
range(smry[,var])
ymin <- 0.09 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 0.2 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "B", cex=text.size, family="sans")
#title("B", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(.1, .15, .2), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl[,2])
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
print(c(tbl[1,2], tbl[101,2], tbl[151,2], tbl[351,2]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
#1C - fst ~ year, by = IUCN status [plus no crash]
smry = rbind(b0,p10, p30, p70)
{
var = 10
varname = "Recipient Population \n Divergence (Fst)"
title = "Fig 1C"
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 0.4 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
par(mar = c(4,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "C", cex=text.size, family="sans")
#title("C", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
#1D - fst vs source ~ year, by IUCN staus [plus no crash]
{
var = 14
varname = "Migrant Source Population \n Divergence (Fst)"
title = "Fig 1C"
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 0.5 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
par(mar = c(4,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "D", cex=text.size, family="sans")
#title("D", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
}
library(scales)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
##Figure 2
{
p70 = read.table("p_2.5.24_LL70_mi_all_summary_comb.csv", header=T, sep=",") #end_9.18.23_LL70 ##fin_5.11.23_1LL70_all_summary
p70[,19] = "LL70"
p30 = read.table("p_1.30.24_LL30_mi_all_summary.csv", header=T, sep=",") #end_9.18.23_LL30 ##fin_5.10.23_1LL30_all_summary
p10 = read.table("p_2.5.24_LL10_mi_all_summary.csv", header=T, sep=",") #end_comb_LL10 ##comb_fin_5.11.23_1LL10_all_summary
b0 = read.table("p_2.5.24_LLnbtl0_mi_all_summary_comb.csv", header=T, sep=",") #end_9.18.23_nbtl30 ##fin_6.1.23_nbtl30_all_summary
b0[,19] = "nbtl0"
smry = rbind(b0,p10, p30, p70) #p50,
gt.cols <- c("grey", "firebrick3", "darkorange1", "gold")
#make panel order by row, with 2 rows and 2 columns
par(mfrow = c(2,2))
#1A - population size ~ year, by = IUCN status
#will want to get total pop size, therefore number adults and babies and numboff
par(mar = c(2,6,2,2))
plot(-20, -20 , xlab="Year", ylab="Population Size", xlim=c(0, 350), ylim=c(0, 1000),
cex.axis = text.size, cex.lab = text.size)
text(-5,1000, "A", cex=text.size, family="sans")
#title("A", adj = 0, cex.main = text.size, line = 2)
col=1
for(z in unique(smry[,19])){
zsmry = smry[smry[,19]==z,,drop=FALSE]
for(b in 1:length(unique(zsmry[,20]))){
bsmry = zsmry[zsmry[,20]==b,,drop=FALSE]
for(p in 1:length(unique(smry[,11]))){
psmry = bsmry[bsmry[,11]==p,,drop=FALSE]
lines(psmry[,1], psmry[,2], col=gt.cols[col], pch=16)
}
}
col=col+1
}
#legend('topleft', legend = "A", cex = text.size)
#legend('bottomright', legend = c('critically endangered', 'endangered','vulnerable'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
#legend('bottomright', legend = c('LC', 'CR','EN', 'VU'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
#1B - delta H ~ year, by = IUCN status [plus no crash]
#will want CR at bottom
smry_h = rbind(ab0,a10, a30, a70)
smry_h = smry_h[smry_h[,1]!="year",,drop=FALSE]
smry[,5] <- as.numeric(smry_h[,5])
{
var = 5
varname = "Heterozygosity"
title = "Fig 1B"
range(smry[,var])
ymin <- 0.09 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 0.2 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
par(mar = c(2,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "B", cex=text.size, family="sans")
#title("B", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(.1, .15, .2), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl[,2])
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
print(c(tbl[1,2], tbl[101,2], tbl[151,2], tbl[351,2]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
#1C - fst ~ year, by = IUCN status [plus no crash]
smry = rbind(b0,p10, p30, p70)
{
var = 10
varname = "Recipient Population \n Divergence (Fst)"
title = "Fig 1C"
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 0.4 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
par(mar = c(4,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "C", cex=text.size, family="sans")
#title("C", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
#1D - fst vs source ~ year, by IUCN staus [plus no crash]
{
var = 14
varname = "Migrant Source Population \n Divergence (Fst)"
title = "Fig 1C"
range(smry[,var])
ymin <- 0 #round(min(smry[,var]), digits = 2)#-.1
ymax <- 0.5 #round(max(smry[,var]), digits = 2)#+.1
ln.alph <- 0.5
pt.alph <- 1.25
diff <- 0.15
xmin <- 0
xmax <- 350
offsets <- c(-0.1, -0.5, 0, 0.5, 0.1, 0.15, 0.2, 0.25) #c(-0.2, -0.1, 0, 0.1, 0.2) #must have the same number of parameter sets
orig.xs <- c(1, 50, 100, 151, 201, 250, 300, 350) #years of interest
text.size <- 1.75
pt.cex <- 1.25
lwd <- 4
par(mar = c(4,6,2,2))
## make plot
plot(-1,-1, xlim = c(xmin, xmax), ylim = c(ymin, ymax),
xaxt = 'n', xlab = 'Year', ylab = varname,
cex.axis = text.size, cex.lab = text.size, yaxt = 'n')
text(-5,ymax, "D", cex=text.size, family="sans")
#title("D", adj = 0, cex.main = text.size, line = 2)
axis(2, at = c(ymin, ymax-(ymax-ymin)/2, ymax), cex.axis = text.size)
axis(1, at = c(0, 50, 100, 150, 200, 250, 300, 350), labels = c('0','50', '100','150','200', '250', '300','350'), cex.axis = text.size)
#abline(h = 0, lty = 2)
col <- 1
for(c in unique(smry[,19])){
print(c)
temp <- smry[smry[,19] == c,, drop=FALSE] #separate by parameter set/aka project name
#y1<-temp[temp[,1] == orig.xs[1],,]
#y2<-temp[temp[,1] == orig.xs[2],,]
#y3<-temp[temp[,1] == orig.xs[3],,]
#y4<-temp[temp[,1] == orig.xs[4],,]
#y5<-temp[temp[,1] == orig.xs[5],,]
#y6<-temp[temp[,1] == orig.xs[6],,]
#y7<-temp[temp[,1] == orig.xs[7],,]
#y8<-temp[temp[,1] == orig.xs[8],,]
tbl = NULL
tbl = matrix(nrow = length(unique(temp[,1])), ncol = 5)
for(d in unique(temp[,1])){
dat = temp[temp[,1]==d,,drop=FALSE]
tbl[(d+1),1] = as.numeric(d)
tbl[(d+1),2] = as.numeric(mean(dat[,var]))
tbl[(d+1),3] = as.numeric(quantile(dat[,var], probs=0.08))
tbl[(d+1),4] = as.numeric(quantile(dat[,var], probs=0.92))
tbl[(d+1),5] = as.character(dat[1,19])
}
#TBL = rbind(TBL, tbl)
#xs <- tbl[,1] + offsets[col]  #dont forget you're in a loop, dummy
polygon(x = c(tbl[,1],rev(tbl[,1])) , y = c(tbl[,3],rev(tbl[,4])), density = dens[col], angle = ang, border = bo[col],
col = adjustcolor(alpha(gt.cols[col], .7), alpha.f=alf[col]))  #border = alpha(gt.cols[col], .8)
lines(tbl[,1], tbl[,2], col = gt.cols[col], lwd = lwd, lty = lty[col])
#xs <- orig.xs + offsets[col]  #dont forget you're in a loop, dummy
#lines(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], ln.alph), lwd = lwd, lty = lty[col])
#points(xs, c(mean(y1[,var]), mean(y2[,var]), mean(y3[,var]), mean(y4[,var]), mean(y5[,var]), mean(y6[,var]), mean(y7[,var]), mean(y8[,var])), col = alpha(gt.cols[col], pt.alph), pch = 19, cex = pt.cex)
#arrows(x0 = xs, y0 = c(quantile(y1[,var], probs=0.08), quantile(y2[,var], probs=c(0.08)), quantile(y3[,var], probs=c(0.08)), quantile(y4[,var], probs=c(0.08)), quantile(y5[,var], probs=c(0.08)), quantile(y6[,var], probs=c(0.08)), quantile(y7[,var], probs=c(0.08)), quantile(y8[,var], probs=c(0.08))),
#       y1 = c(quantile(y1[,var], probs=0.92), quantile(y2[,var], probs=0.92), quantile(y3[,var], probs=0.92), quantile(y4[,var], probs=0.92), quantile(y5[,var], probs=0.92), quantile(y6[,var], probs=0.92), quantile(y7[,var], probs=0.92), quantile(y8[,var], probs=0.92)),
#       lwd = lwd, col = alpha(gt.cols[col], pt.alph), code=3, angle=90, length=0.1)
#print(mean(y1[,var]))
#print(mean(y7[,var]))
col <- col+1
}
#legend('topleft', legend = c('CR', 'EN','VU', 'LC'), col = gt.cols, pch = 19, bty = 'n', cex = (text.size-.5), pt.cex = pt.cex+.5, horiz = FALSE, x.intersp = 0.2)
}
}
